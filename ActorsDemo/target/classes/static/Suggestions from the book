PAG. 62

Itâ€™s easy enough to write your own conditions in Spring. All you have to do is implement the Condition interface and override its matches() method. For example, the following simple condition class will only pass if JdbcTemplate is available on the classpath:
package readinglist; 

import org.springframework.context.annotation.Condition; 
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.type.AnnotatedTypeMetadata;
public class JdbcTemplateCondition implements Condition 
{ 
	@Override public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata)
	{
		try 
		{ 
			context.getClassLoader().loadClass( "org.springframework.jdbc.core.JdbcTemplate"); 
			return true; 
		} 
		catch (Exception e) 
		{ 
			return false; 
		} 
	} 
}


You can use this custom condition class when you declare beans in Java:

@Conditional(JdbcTemplateCondition.class) 
public MyService myService() { ... }

// **************************